import CJSImportProcessor from "./CJSImportProcessor";
import NameManager from "./NameManager";
import { Scope } from "./parser/tokenizer/state";
import TokenProcessor from "./TokenProcessor";
export declare type Transform = "jsx" | "typescript" | "flow" | "imports";
export declare type Options = {
    transforms: Array<Transform>;
    jsxPragma?: string;
    jsxFragmentPragma?: string;
    enableLegacyTypeScriptModuleInterop?: boolean;
    enableLegacyBabel5ModuleInterop?: boolean;
    filePath?: string;
};
export declare type TransformResult = {
    code: string;
};
export declare type SucraseContext = {
    tokenProcessor: TokenProcessor;
    scopes: Array<Scope>;
    nameManager: NameManager;
    importProcessor: CJSImportProcessor | null;
};
export declare function getVersion(): string;
export declare function transform(code: string, options: Options): TransformResult;
/**
 * Return a string representation of the sucrase tokens, mostly useful for
 * diagnostic purposes.
 */
export declare function getFormattedTokens(code: string, options: Options): string;
